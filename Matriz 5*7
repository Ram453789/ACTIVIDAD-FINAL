#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define FILAS 5
#define COLUMNAS 7

void ma(int matriz[FILAS][COLUMNAS]) {
    int i, j;
    srand(time(NULL));

    for (i = 0; i < FILAS; i++) {
        for (j = 0; j < COLUMNAS; j++) {
            matriz[i][j] = rand() % 10; 
        }
    }
}

void impmatriz(int matriz[FILAS][COLUMNAS]) {
    int i, j;
    for (i = 0; i < FILAS; i++) {
        for (j = 0; j < COLUMNAS; j++) {
            printf("%3d ", matriz[i][j]);
        }
        printf("\n");
    }
}

int sumadiagonalp(int matriz[FILAS][COLUMNAS]) {
    int i, suma = 0;
    for (i = 0; i < FILAS && i < COLUMNAS; i++) {
        suma += matriz[i][i];
    }
    return suma;
}

int sumapf(int matriz[FILAS][COLUMNAS]) {
    int j, suma = 0;
    for (j = 0; j < COLUMNAS; j++) {
        suma += matriz[0][j];
    }
    return suma;
}

int sumauc(int matriz[FILAS][COLUMNAS]) {
    int i, suma = 0;
    for (i = 0; i < FILAS; i++) {
        suma += matriz[i][COLUMNAS - 1];
    }
    return suma;
}

int sumfpp(int matriz[FILAS][COLUMNAS]) {
    int i, j, suma = 0;
    for (i = 0; i < FILAS; i += 2) {
        for (j = 0; j < COLUMNAS; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int csumim(int matriz[FILAS][COLUMNAS]) {
    int i, j, suma = 0;
    for (j = 1; j < COLUMNAS; j += 2) {
        for (i = 0; i < FILAS; i++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumff(int matriz[FILAS][COLUMNAS], int filaInicio, int filaFin) {
    int i, j, suma = 0;
    for (i = filaInicio; i <= filaFin; i++) {
        for (j = 0; j < COLUMNAS; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumcc(int matriz[FILAS][COLUMNAS], int columnaInicio, int columnaFin) {
    int i, j, suma = 0;
    for (j = columnaInicio; j <= columnaFin; j++) {
        for (i = 0; i < FILAS; i++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumtriangularsup(int matriz[FILAS][COLUMNAS]) {
    int i, j, suma = 0;
    for (i = 0; i < FILAS; i++) {
        for (j = i; j < COLUMNAS; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumtiangularinf(int matriz[FILAS][COLUMNAS]) {
    int i, j, suma = 0;
    for (i = 0; i < FILAS; i++) {
        for (j = 0; j < COLUMNAS && j <= i; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumdiagonalsytriangularinf(int matriz[FILAS][COLUMNAS]) {
    int i, j, suma = 0;
    for (i = 0; i < FILAS; i++) {
        for (j = 0; j < COLUMNAS && j <= i; j++) {
            if (i == j) {
                suma += matriz[i][j]; // Sumar solo en la diagonal principal
            }
        }
    }
    return suma;
}

int main() {
    int matriz[FILAS][COLUMNAS];

    ma(matriz);

    printf("Matriz generada:\n");
    impmatriz(matriz);

    printf("\nSuma de la diagonal principal: %d\n", sumadiagonalp(matriz));
    printf("Suma de la fila 1: %d\n", sumapf(matriz));
    printf("Suma de la columna 7: %d\n", sumauc(matriz));
    printf("---------------------------\n");
    printf("Suma de la fila 1: %d\n", sumff(matriz, 0, 0));
    printf("Suma de la fila 3: %d\n", sumff(matriz, 2, 2));
    printf("Suma de la fila 5: %d\n", sumff(matriz, 4, 4));
    printf("Suma de las filas impares: %d\n", sumfpp(matriz));
    printf("---------------------------\n");
    printf("Suma de la columna 2: %d\n", sumcc(matriz, 1, 1));
    printf("Suma de la columna 4: %d\n", sumcc(matriz, 3, 3));
    printf("Suma de la columna 6: %d\n", sumcc(matriz, 5, 5));
    printf("Suma de las columnas pares: %d\n", csumim(matriz));
    printf("---------------------------\n");
    printf("\nSuma de la diagonal principal: %d\n", sumadiagonalp(matriz));
    printf("Suma del triangular superior: %d\n", sumtriangularsup(matriz));
    printf("Suma de la diagonal principal y del triangular superior: %d\n", sumtriangularsup(matriz) + sumadiagonalp(matriz));
    printf("---------------------------\n");
    printf("Suma de la diagonal principal: %d\n", sumadiagonalp(matriz));
    printf("Suma de la triangular inferior: %d\n", sumtiangularinf(matriz));
    printf("Suma de la diagonal principal y del triangular inferior: %d\n", sumtiangularinf(matriz) + sumadiagonalp(matriz));
    printf("---------------------------\n");
    printf("Yo empecÃ© a contar desde el 1");
    return 0;
}
